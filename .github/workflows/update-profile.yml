name: 🚀 Neural Network Update

on:
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  update-readme:
    name: ⚡ Update Neural Profile
    runs-on: ubuntu-latest
    
    steps:
      - name: 🔄 Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐍 Setup Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 📦 Install Dependencies
        run: |
          pip install requests python-dateutil pytz

      - name: 🧬 Generate Dynamic Content
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 << 'EOF'
          import requests
          import os
          from datetime import datetime
          import pytz

          # Get real GitHub data (no fakes!)
          headers = {'Authorization': f'token {os.environ["GITHUB_TOKEN"]}'}
          
          try:
              # Get user data
              user_response = requests.get('https://api.github.com/users/CowLegSoup', headers=headers)
              user_data = user_response.json() if user_response.status_code == 200 else {}
              
              # Get recent activity
              events_response = requests.get('https://api.github.com/users/CowLegSoup/events/public?per_page=10', headers=headers)
              events_data = events_response.json() if events_response.status_code == 200 else []
              
              print(f"✅ Successfully fetched data for user: {user_data.get('name', 'CowLegSoup')}")
              print(f"📊 Public repositories: {user_data.get('public_repos', 0)}")
              print(f"👥 Followers: {user_data.get('followers', 0)}")
              print(f"⭐ Recent activity events: {len(events_data)}")
              
          except Exception as e:
              print(f"⚠️ API Error: {e}")
          
          # Update timestamp
          timestamp = datetime.now(pytz.UTC).strftime('%Y-%m-%d %H:%M UTC')
          print(f"🕐 Neural sync timestamp: {timestamp}")
          EOF

      - name: 🐍 Generate Contribution Snake
        uses: Platane/snk@v3
        with:
          github_user_name: CowLegSoup
          outputs: |
            dist/github-contribution-grid-snake.svg
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark

      - name: 🎯 Deploy Snake to Output Branch
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🤖 Commit Changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Neural Network Bot"
          
          # Only commit if there are actual changes
          if git diff --quiet && git diff --staged --quiet; then
              echo "📊 No changes detected - neural network already optimal"
          else
              git add .
              git commit -m "🤖 Neural network update: $(date -u +'%Y-%m-%d %H:%M UTC')" || exit 0
              git push
              echo "🚀 Neural pathways successfully updated!"
          fi

  generate-metrics:
    name: 📊 Advanced Metrics Generation
    runs-on: ubuntu-latest
    needs: update-readme
    
    steps:
      - name: 🔬 Generate Comprehensive Metrics
        uses: lowlighter/metrics@latest
        with:
          token: ${{ secrets.METRICS_TOKEN }}
          user: CowLegSoup
          template: classic
          base: header, activity, community, repositories, metadata
          
          # Language stats
          plugin_languages: yes
          plugin_languages_limit: 8
          plugin_languages_threshold: 0%
          plugin_languages_colors: github
          plugin_languages_sections: most-used
          plugin_languages_details: bytes-size, percentage
          
          # Activity tracking
          plugin_activity: yes
          plugin_activity_limit: 5
          plugin_activity_days: 14
          plugin_activity_filter: all
          
          # Code frequency
          plugin_habits: yes
          plugin_habits_from: 200
          plugin_habits_days: 14
          plugin_habits_facts: yes
          plugin_habits_charts: yes
          
          # Achievements
          plugin_achievements: yes
          plugin_achievements_threshold: C
          plugin_achievements_secrets: yes
          plugin_achievements_display: detailed
          
          # Notable contributions
          plugin_notable: yes
          plugin_notable_from: organization
          
          # Traffic (if available)
          plugin_traffic: yes
